// Generated by github.com/davyxu/tabtoy
// Version: 2.8.10
// DO NOT EDIT!!
using System.Collections.Generic;

namespace Assets.Scripts
{
	
	

	// Defined in table: Config
	
	public partial class Config
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// Role
		/// </summary>
		public List<RoleDefine> Role = new List<RoleDefine>(); 
		
		/// <summary> 
		/// Skin
		/// </summary>
		public List<SkinDefine> Skin = new List<SkinDefine>(); 
		
		/// <summary> 
		/// Animation
		/// </summary>
		public List<AnimationDefine> Animation = new List<AnimationDefine>(); 
	
	
		#region Index code
	 	
	
		#endregion
		#region Deserialize code
		
		static tabtoy.DeserializeHandler<Config> _ConfigDeserializeHandler;
		static tabtoy.DeserializeHandler<Config> ConfigDeserializeHandler
		{
			get
			{
				if (_ConfigDeserializeHandler == null )
				{
					_ConfigDeserializeHandler = new tabtoy.DeserializeHandler<Config>(Deserialize);
				}

				return _ConfigDeserializeHandler;
			}
		}
		public static void Deserialize( Config ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.Role.Add( reader.ReadStruct<RoleDefine>(RoleDefineDeserializeHandler) );
                	}
                	break; 
                	case 0xa0001:
                	{
						ins.Skin.Add( reader.ReadStruct<SkinDefine>(SkinDefineDeserializeHandler) );
                	}
                	break; 
                	case 0xa0002:
                	{
						ins.Animation.Add( reader.ReadStruct<AnimationDefine>(AnimationDefineDeserializeHandler) );
                	}
                	break; 
                }
             } 

			
		}
		static tabtoy.DeserializeHandler<RoleDefine> _RoleDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<RoleDefine> RoleDefineDeserializeHandler
		{
			get
			{
				if (_RoleDefineDeserializeHandler == null )
				{
					_RoleDefineDeserializeHandler = new tabtoy.DeserializeHandler<RoleDefine>(Deserialize);
				}

				return _RoleDefineDeserializeHandler;
			}
		}
		public static void Deserialize( RoleDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.ID = reader.ReadInt32();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                	case 0x60002:
                	{
						ins.ModelResName = reader.ReadString();
                	}
                	break; 
                	case 0x10003:
                	{
						ins.Skins.Add( reader.ReadInt32() );
                	}
                	break; 
                }
             } 

			
		}
		static tabtoy.DeserializeHandler<SkinDefine> _SkinDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<SkinDefine> SkinDefineDeserializeHandler
		{
			get
			{
				if (_SkinDefineDeserializeHandler == null )
				{
					_SkinDefineDeserializeHandler = new tabtoy.DeserializeHandler<SkinDefine>(Deserialize);
				}

				return _SkinDefineDeserializeHandler;
			}
		}
		public static void Deserialize( SkinDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.ID = reader.ReadInt32();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                	case 0x60002:
                	{
						ins.Describtion = reader.ReadString();
                	}
                	break; 
                	case 0x60003:
                	{
						ins.ResName = reader.ReadString();
                	}
                	break; 
                }
             } 

			
		}
		static tabtoy.DeserializeHandler<AnimationDefine> _AnimationDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<AnimationDefine> AnimationDefineDeserializeHandler
		{
			get
			{
				if (_AnimationDefineDeserializeHandler == null )
				{
					_AnimationDefineDeserializeHandler = new tabtoy.DeserializeHandler<AnimationDefine>(Deserialize);
				}

				return _AnimationDefineDeserializeHandler;
			}
		}
		public static void Deserialize( AnimationDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x10000:
                	{
						ins.ID = reader.ReadInt32();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                	case 0x60002:
                	{
						ins.EyeAnimationKey = reader.ReadString();
                	}
                	break; 
                	case 0x10003:
                	{
						ins.HasWink = reader.ReadInt32();
                	}
                	break; 
                	case 0x10004:
                	{
						ins.Duration = reader.ReadInt32();
                	}
                	break; 
                }
             } 

			
		}
		#endregion
	

	} 

	// Defined in table: Role
	[System.Serializable]
	public partial class RoleDefine
	{
	
		
		/// <summary> 
		/// 角色ID
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 角色名称
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 模型资源名称
		/// </summary>
		public string ModelResName = ""; 
		
		/// <summary> 
		/// 皮肤列表
		/// </summary>
		public List<int> Skins = new List<int>(); 
	
	

	} 

	// Defined in table: Skin
	[System.Serializable]
	public partial class SkinDefine
	{
	
		
		/// <summary> 
		/// ID
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 描述
		/// </summary>
		public string Describtion = ""; 
		
		/// <summary> 
		/// 资源名称
		/// </summary>
		public string ResName = ""; 
	
	

	} 

	// Defined in table: Animation
	[System.Serializable]
	public partial class AnimationDefine
	{
	
		
		/// <summary> 
		/// ID
		/// </summary>
		public int ID = 0; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 眼睛动画标志
		/// </summary>
		public string EyeAnimationKey = ""; 
		
		/// <summary> 
		/// 是否有眼部动画
		/// </summary>
		public int HasWink = 0; 
		
		/// <summary> 
		/// 动画持续时间
		/// </summary>
		public int Duration = 0; 
	
	

	} 

}
